name: Promote to Staging

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  cancel-in-progress: true
  group: gke-promote

env:
  PROJECT_ID: shared-429520
  CLUSTER_PROJECT_ID: staging-400918
  GAR_LOCATION: us-central1
  GKE_CLUSTER: bren-staging
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: frontend-site-staging
  REPOSITORY: frontend-site
  IMAGE: frontend-site
  STG_GCS_BUCKET: staging_promotion_instance
  PRD_GCS_BUCKET: production_promotion_instance

jobs:
  promote_to_staging:
    runs-on: ubuntu-latest
    env:
      ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      IMAGE_REPOSITORY: "us-east1-docker.pkg.dev/shared-429520/frontend-site/frontend-site"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      - name: Download image tag from GCS
        run: |
          gsutil cp gs://${{ env.STG_GCS_BUCKET }}/${{ env.REPOSITORY }}/image_tag.txt .

      - name: Verify image tag downloaded
        run: |
          cat image_tag.txt

      - name: List files in current directory (debugging step)
        run: |
          ls -l

      - name: Set up ArgoCD CLI
        uses: clowdhaus/argo-cd-action@main
        with:
          version: 2.6.7

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Promote to Staging
        run: |
          IMAGE_TAG=$(cat image_tag.txt)
          argocd app create --upsert \
            --server argocd.wearebren.com \
            --name ${DEPLOYMENT_NAME} \
            --project default \
            --helm-set image.repository=${IMAGE_REPOSITORY} \
            --helm-set image.tag=${IMAGE_TAG} \
            --dest-name gke_${CLUSTER_PROJECT_ID}_${GKE_ZONE}_${GKE_CLUSTER} \
            --repo git@github.com:we-are-bren/${REPOSITORY}.git \
            --path cicd-pipeline/helmcharts \
            --values-literal-file cicd-pipeline/helmcharts/values-staging.yaml \
            --dest-namespace ${REPOSITORY} \
            --sync-option CreateNamespace=true \
            --sync-policy automated \
            --insecure


      - name: Sync Application
        run: |
          argocd app sync ${DEPLOYMENT_NAME} --server argocd.wearebren.com --insecure

      - name: Save image tag for production promotion
        run: |
          gsutil cp image_tag.txt gs://${{ env.PRD_GCS_BUCKET }}/${{ env.REPOSITORY }}/image_tag.txt          

      - name: Delete image tag from GCS
        run: |
          gsutil rm gs://${{ env.STG_GCS_BUCKET }}/${{ env.REPOSITORY }}/image_tag.txt
