# Default values for charts-frontend-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: frontend-platform
replicaCount: 1

image:
  repository: ""
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 3000
  loadBalancerIP: "34.139.118.221"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: 
   - secretName: bren-certificado-tls
     hosts:
       - 34.139.118.221 

resources:
  limits:
    cpu: 300m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

# livenessProbe:
#   httpGet:
#     path: /api/hello-world/healthcheck
#     port: 8080
#     host: localhost
#   initialDelaySeconds: 20
#   timeoutSeconds: 3
#   failureThreshold: 2
# readinessProbe:
#   httpGet:
#     path: /api/hello-world/healthcheck
#     port: 8080
#     host: localhost
#   initialDelaySeconds: 10
#   timeoutSeconds: 1

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 15
  targetCPUUtilizationPercentage: 85
  targetMemoryUtilizationPercentage: 85

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

DSN_SENTRY: "https://263e2b0943474ebfbfbaed8f1fc6b4e1@o4505924050485248.ingest.us.sentry.io/4507426140585984"

config:
  name: config
  nextPublicStripePublishableKey: "pk_test_51NlHmoLoDNUBfNKt0WMfrW9EkXqp3hNSn0MWps7wVUVP3bRSqxX1dErXpbpZflFzNQdBnN1P6cDny73qfYWJQmQu00R7VbHf5N"
  sentryDns: "https://738e6494156ae6998db2f9eceb9389af@o4505924050485248.ingest.sentry.io/4505942408232960"
  nextPublicZapSignUrl: "https://sandbox.app.zapsign.com.br"
  sentryAuthToken: "98735e711cfe2e360805129ee395801aecd9706e1fb1552e084cf0d94c9148f0"
  nextPublicBrdidUrl: "https://us-central1-dev-ava-378413.cloudfunctions.net/webhook-brdid-dev"
  nextPublicCnpjwsToken: "Ff82YdG8PQ4xVySWvlQ6ILURifFHso4oVXhcUPNiB19f"
  nextPublicStripeTrimestralPriceId: "price_1NvRe4LoDNUBfNKt6TK8q0Vj"
  nextPublicStripeSemestralPriceId: "price_1NvRepLoDNUBfNKtQ5lzjG6F"
  nextPublicStripeAnualPriceId: "price_1NvRfILoDNUBfNKto36BOEUA"
  nextPublicTtl: "30"
  nextPublicPusherCluster: "us3"
  nextPublicIntercomAppId: "aabsmwpb"
  nextPublicIntercomSecretKey: "VMcP-1DjuSXaoAvvvJF5uk7CnZtqmx92V4NkOtgY"
  nextPublicapiUrl: "https://dev.ninja.wearebren.com/api"
  nextPublicpusherPubKey: "1613a06350b718a445d1"
  nextPublicBroadcasterUrl: "https://node-broadcaster-dvs6h7egla-uc.a.run.app"
